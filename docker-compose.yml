services:
  frontend:
    container_name: frontend
    build:
      context: ./src/demoapp.frontend/
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8080
    ports:
      - "3000:3000"
    networks:
      - demo-network

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./src/DemoApp.Backend/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Database=WeatherData;Username=postgres;Password=postgres
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080"
    networks:
      - demo-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - demo-network

  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    # volumes:
    #   - /mnt/HC_Volume_101025656/docker/postgres/data:/var/lib/postgresql/data
    #   - /mnt/HC_Volume_101025656/docker/postgres/backups:/backups
    networks:
      - demo-network

networks:
  demo-network:
    external: true
