services:
  frontend:
    container_name: frontend
    build:
      context: ./src/demoapp.frontend/
      dockerfile: Dockerfile
    env_file:
      - path: ./configs/frontend.env
        required: true
    ports:
      - "3000:3000"
    networks:
      - demo-network

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./src/DemoApp.Backend/Dockerfile
    env_file:
      - path: ./configs/backend.env
        required: true
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - demo-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ~/nginx/letsencrypt:/etc/letsencrypt
      - ./configs/temp-nginx.conf:/etc/nginx/conf.d/default.conf
    #      - ./configs/prod-nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - demo-network

  certbot:
    image: certbot/certbot
    volumes:
      - ~/nginx/letsencrypt:/etc/letsencrypt
      - ~/nginx/webdata:/usr/share/nginx/html

  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - ~/postgres/data:/var/lib/postgresql/data
      - ~/postgres/backups:/backups
    networks:
      - demo-network

networks:
  demo-network:
